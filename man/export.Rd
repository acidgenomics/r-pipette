% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/export-methods.R
\name{export}
\alias{export}
\alias{export,DataFrame,character,character-method}
\alias{export,DataFrame,character,missingOrNULL-method}
\alias{export,DataFrame,missingOrNULL,missingOrNULL-method}
\alias{export,DataFrame,missingOrNULL,character-method}
\alias{export,GenomicRanges,character,character-method}
\alias{export,GenomicRanges,character,missingOrNULL-method}
\alias{export,GenomicRanges,missingOrNULL,missingOrNULL-method}
\alias{export,GenomicRanges,missingOrNULL,character-method}
\alias{export,Matrix,character,character-method}
\alias{export,Matrix,character,missingOrNULL-method}
\alias{export,Matrix,missingOrNULL,missingOrNULL-method}
\alias{export,Matrix,missingOrNULL,character-method}
\alias{export,character,character,character-method}
\alias{export,character,character,missingOrNULL-method}
\alias{export,character,missingOrNULL,missingOrNULL-method}
\alias{export,character,missingOrNULL,character-method}
\alias{export,data.frame,character,character-method}
\alias{export,data.frame,character,missingOrNULL-method}
\alias{export,data.frame,missingOrNULL,missingOrNULL-method}
\alias{export,data.frame,missingOrNULL,character-method}
\alias{export,matrix,character,character-method}
\alias{export,matrix,character,missingOrNULL-method}
\alias{export,matrix,missingOrNULL,missingOrNULL-method}
\alias{export,matrix,missingOrNULL,character-method}
\title{Export}
\usage{
export(object, con, format, ...)

\S4method{export}{DataFrame,character,character}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{DataFrame,character,missingOrNULL}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{DataFrame,missingOrNULL,missingOrNULL}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{DataFrame,missingOrNULL,character}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{GenomicRanges,character,character}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{GenomicRanges,character,missingOrNULL}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{GenomicRanges,missingOrNULL,missingOrNULL}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{GenomicRanges,missingOrNULL,character}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{Matrix,character,character}(
  object,
  con,
  format,
  ext = c("mtx.gz", "mtx.bz2", "mtx.xz", "mtx.zip", "mtx"),
  dir = getOption("acid.export.dir", default = "."),
  file = NULL,
  overwrite = getOption("acid.overwrite", default = TRUE),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{Matrix,character,missingOrNULL}(
  object,
  con,
  format,
  ext = c("mtx.gz", "mtx.bz2", "mtx.xz", "mtx.zip", "mtx"),
  dir = getOption("acid.export.dir", default = "."),
  file = NULL,
  overwrite = getOption("acid.overwrite", default = TRUE),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{Matrix,missingOrNULL,missingOrNULL}(object, con, format)

\S4method{export}{Matrix,missingOrNULL,character}(object, con, format)

\S4method{export}{character,character,character}(
  object,
  con,
  format,
  append = FALSE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", default = "base"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{character,character,missingOrNULL}(
  object,
  con,
  format,
  append = FALSE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", default = "base"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{character,missingOrNULL,missingOrNULL}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{character,missingOrNULL,character}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{data.frame,character,character}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{data.frame,character,missingOrNULL}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{data.frame,missingOrNULL,missingOrNULL}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{data.frame,missingOrNULL,character}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{matrix,character,character}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{matrix,character,missingOrNULL}(
  object,
  con,
  format,
  rownames = TRUE,
  colnames = TRUE,
  overwrite = getOption("acid.overwrite", default = TRUE),
  engine = getOption(x = "acid.export.engine", "data.table"),
  quiet = getOption("acid.quiet", default = FALSE)
)

\S4method{export}{matrix,missingOrNULL,missingOrNULL}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)

\S4method{export}{matrix,missingOrNULL,character}(
  object,
  con = NULL,
  format,
  dir = getOption("acid.export.dir", default = "."),
  ...
)
}
\arguments{
\item{object}{Object.
An object supporting \code{dim()}, or a supported class capable of being coerced
to \code{data.frame}, to be written to disk.}

\item{con}{\code{character(1)}, \code{connection}, or \code{missing}.
The connection from which data is loaded or to which data is saved. If this
is a character vector, it is assumed to be a filename, and a corresponding
file connection is created and then closed after exporting the object. If a
\code{BiocFile} derivative, the data is loaded from or saved to the underlying
resource.  If missing, the function will return the output as a character
vector, rather than writing to a connection.}

\item{format}{\code{character(1)} or \code{missing}.
An optional file format type, which can be used to override the file format
inferred from \code{con}. Only recommended for file and URL paths that don't
contain an extension.}

\item{rownames}{\code{logical(1)}.
Apply to row names.}

\item{colnames}{\code{logical(1)}.
Apply to column names.}

\item{overwrite}{\code{logical(1)}.
Overwrite existing file on disk.}

\item{engine}{\code{character(1)}.
Engine (package) to use for export.
Currently supported:
\itemize{
\item base
\item data.table
\item readr
\item vroom
}}

\item{quiet}{\code{logical(1)}.
Perform command quietly, suppressing messages.}

\item{dir}{\code{character(1)}.
Directory path.}

\item{...}{Additional arguments.}

\item{ext}{\code{character(1)}.
Output file format extension.

\code{matrix} supported arguments:
\itemize{
\item Comma separated values (CSV):
\code{"csv"}, \code{"csv.bz2"}, \code{"csv.gz"}, \code{"csv.xz"}, \code{"csv.zip"}.
\item Tab separated values (TSV):
\code{"tsv"}, \code{"tsv.bz2"}, \code{"tsv.gz"}, \code{"tsv.xz"}, \code{"tsv.zip"}.
}

\code{Matrix} (\code{sparseMatrix}) supported arguments:
\itemize{
\item MatrixMarket exchange (MTX):
\code{"mtx"}, \code{"mtx.bz2"}, \code{"mtx.gz"}, \code{"mtx.xz"}, \code{"mtx.zip"}.
}}

\item{file}{\code{character(1)}.
File path. When left unset (default), the \code{ext} and \code{dir} arguments will
be used instead.}

\item{append}{\code{logical(1)}.
Append to output file.
When enabled, automatically sets \code{overwrite} argument to \code{FALSE}.
Requires readr package to be installed.}
}
\value{
Invisible \code{character}.
File path(s).
}
\description{
Export
}
\note{
Updated 2021-09-27.
}
\section{Row names}{


Some export utilities in R have a tendency to drop row names when writing to
disk in CSV format. For example, the \href{https://readr.tidyverse.org/}{readr} family of functions never
write row names by design. This is a \emph{really poor} default setting for
handling genomic data, which often contain gene identifiers in the row names.
Here we're performing any internal tibble coercion step to ensure row names
are always moved to a \code{"rowname"} column in the CSV export.
}

\section{Debugging}{


Note that this function currently wraps \code{data.table::fwrite()} by default
for exporting \code{data.frame} and \code{matrix} class objects.
}

\examples{
counts <- matrix(data = seq_len(100L), nrow = 10)
export(counts, ext = "csv")

## Clean up.
file.remove("counts.csv")
}
\seealso{
Packages:
\itemize{
\item \href{http://r-datatable.com/}{data.table}.
\item \href{http://readr.tidyverse.org}{readr}.
\item \href{https://cran.r-project.org/package=rio}{rio}.
\item \href{http://bioconductor.org/packages/rtracklayer/}{rtracklayer}.
\item \href{https://vroom.r-lib.org}{vroom}.
}

Export functions:
\itemize{
\item \code{BiocIO::export()}.
\item \code{data.table::fwrite()}.
\item \code{readr::write_csv()}.
\item \code{rio::export()}.
\item \code{rtracklayer::export()}.
\item \code{vroom::vroom_write()}.
}
}
