% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/coerce-setAs-methods.R
\name{coerce}
\alias{coerce}
\alias{coerce,DataFrame,data.table-method}
\alias{coerce,DataFrame,tbl_df-method}
\alias{coerce,GenomicRanges,data.table-method}
\alias{coerce,GenomicRanges,tbl_df-method}
\alias{coerce,IntegerRanges,data.frame-method}
\alias{coerce,IntegerRanges,data.table-method}
\alias{coerce,IntegerRanges,tbl_df-method}
\alias{coerce,Matrix,DataFrame-method}
\alias{coerce,Matrix,data.frame-method}
\alias{coerce,data.frame,data.table-method}
\alias{coerce,data.frame,tbl_df-method}
\alias{coerce,data.table,DataFrame-method}
\alias{coerce,tbl_df,DataFrame-method}
\title{Coercion methods}
\value{
Modified object, of desired conversion class.
}
\description{
Coercion methods
}
\details{
These conversion methods are primarily intended to interconvert between
popular tabular formats in R, including \code{data.frame}, \code{data.table}, \code{tbl_df},
and the Bioconductor \code{DataFrame} classes.
}
\note{
Updated 2022-02-08.
}
\section{\code{DataFrame} (Bioconductor) coercion}{


Don't define \code{as()} coercion method for \code{list} here. It will create issues
with \code{data.frame} coercion. Use \code{as.DataFrame()} instead to coerce a \code{list}
to \code{DataFrame}.

Wrapping the columns in an \code{I()} should work when passing to \code{DataFrame()}.
See also \code{as_tibble()} for easy list to data frame coercion.

\code{as()} method definition causes issues with \code{data.frame} to \code{DataFrame}
coercion when defined, because \code{data.frame} inherits from list.
}

\examples{
data(
    DataFrame,
    GenomicRanges,
    IntegerRanges,
    data.frame,
    data.table,
    sparseMatrix,
    tibble,
    package = "AcidTest"
)

## `DataFrame` to `data.table` ====
from <- DataFrame
to <- as(from, "data.table")
print(to)

## `DataFrame` to `tbl_df` ====
from <- DataFrame
to <- as(from, "tbl_df")
print(to)

## `GenomicRanges` to `data.table` ====
from <- GenomicRanges
to <- as(from, "data.table")
print(to)

## `GenomicRanges` to `tbl_df` ====
from <- GenomicRanges
to <- as(from, "tbl_df")
print(to)

## `IntegerRanges` to `data.frame` ====
from <- IntegerRanges
to <- as(from, "data.frame")
print(to)

## `IntegerRanges` to `data.table` ====
from <- IntegerRanges
to <- as(from, "data.table")
print(to)

## `IntegerRanges` to `tbl_df` ====
from <- IntegerRanges
to <- as(from, "tbl_df")
print(to)

## `Matrix` to `DataFrame` ====
from <- sparseMatrix
to <- as(from, "DataFrame")
print(to)

## `Matrix` to `data.frame` ====
from <- sparseMatrix
to <- as(from, "data.frame")
print(to)

## `data.frame` to `data.table` ====
from <- data.frame
to <- as(from, "data.table")
print(to)

## `data.frame` to `tbl_df` ====
from <- data.frame
to <- as(from, "tbl_df")
print(to)

## `data.table` to `DataFrame` ====
from <- data.table
to <- as(from, "DataFrame")
print(to)

## `tbl_df` to `DataFrame` ====
from <- tibble
to <- as(from, "DataFrame")
print(to)
}
\seealso{
\itemize{
\item \code{as.DataFrame()}.
\item \code{as.data.table()}.
\item \code{as_tibble()}.
\item \code{getClass("DataFrame")}.
\item \code{getClass("data.table")}.
\item \code{getClass("tbl_df")}.
}
}
